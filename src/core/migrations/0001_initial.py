# Generated by Django 4.0.3 on 2022-03-13 22:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('description', models.TextField(blank=True, verbose_name='User.description')),
                ('contact', models.TextField(verbose_name='User.contact')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='BaseModel.created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='BaseModel.updated_at')),
                ('name', models.TextField(verbose_name='Goods.name')),
                ('description', models.TextField(blank=True, verbose_name='Goods.description')),
                ('link', models.TextField(blank=True, verbose_name='Goods.link')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='BaseModel.created_by')),
            ],
            options={
                'verbose_name': 'Goods',
                'verbose_name_plural': 'Goods',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='BaseModel.created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='BaseModel.updated_at')),
                ('name', models.TextField(verbose_name='Organization.name')),
                ('description', models.TextField(verbose_name='Organization.description')),
                ('contact', models.TextField(verbose_name='Organization.contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='BaseModel.created_by')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Poi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='BaseModel.created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='BaseModel.updated_at')),
                ('name', models.TextField(verbose_name='Poi.name')),
                ('description', models.TextField(verbose_name='Poi.description')),
                ('contact', models.TextField(verbose_name='Poi.contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='BaseModel.created_by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.organization', verbose_name='Poi.organization')),
            ],
            options={
                'verbose_name': 'Poi',
                'verbose_name_plural': 'Pois',
            },
        ),
        migrations.CreateModel(
            name='Needs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='BaseModel.created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='BaseModel.updated_at')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Needs.quantity')),
                ('unit', models.CharField(choices=[('kg', 'Kg'), ('l', 'L'), ('szt', 'Pcs')], max_length=16, verbose_name='Needs.unit')),
                ('due_time', models.DateTimeField(verbose_name='Needs.due_time')),
                ('status', models.CharField(choices=[('Needs.Status.active', 'Active'), ('Needs.Status.disabled', 'Disabled')], max_length=32, verbose_name='Needs.status')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='BaseModel.created_by')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.goods', verbose_name='Needs.good')),
                ('poi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.poi', verbose_name='Needs.poi')),
            ],
            options={
                'verbose_name': 'Needs',
                'verbose_name_plural': 'Needs',
            },
        ),
    ]
